/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
project.description= 'Hai Param'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

task helloworld {

  println 'helloword'
}

task simple  {

   println 'Running simple  '+project.description
}

project.setDescription('Bye Param')

project.getTasks().create('smple2'){

  println 'Running porject '+project.description
}

task second {

  doFirst {
  
  
     println 'doFirst'
  }
    

}

task third {

  doFirst { 
    println "doFirst from ffff ${it.name}"
  }
  
  doLast {  Task taskObject ->   
     println 'doLast from third ' + taskObject.name
  }
} 

task numbers {

   (1..4).each{ number -> 
   
     def squre = number * number
     println "square valued of ${number} is ${squre}"
   
   }
}


task list2 {

  doFirst{
	  def list = ['a', 'b']
	  println list.collect {it.toLowerCase()}.join('&')
  }
}

list2.dependsOn 'numbers'


def printTaskName = {
   task -> println "Run .... ${task.name}"
}

def taskGroup = 'base'

def simpleTask = "parithi"

task parent  {
         
         println "Run .... ${it.name}"
     }


task "${simpleTask}" (group: taskGroup)  { 
  println 'Running '


}

// parent.dependsOn {

//   project.tasks.findAll {
//     tasks -> tasks.name.contains 'y'
//   }
// }

task you1(description:'this going to be defaul tasks', group: taskGroup) {

  printTaskName
}


// ['Pavalan','Parithi'].each {
//    env -> task "deploy${each}" (group: taskGroup) {
//      println 'Deploying '
//    }
// }

task you2(dependsOn : you1, description: ' this second task', group: taskGroup ) {

  printTaskName
         
  }

task 'pavaln' (group: taskGroup, description: 'He is my first son, from anjeneyar'){

 println 'Hai pavalan'
}



defaultTasks 'you1'

